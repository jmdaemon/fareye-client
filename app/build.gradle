plugins {
    id 'application'
    id 'checkstyle'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    //id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'io.github.jmdaemon'
version = '0.1.0'

def AppEntryPoint = 'ui.jfx.App'

repositories {
    mavenCentral()
    // Add jars in app/libs
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation 'com.google.guava:guava:31.1-jre'
    // Unit Testing

    // Http Mocking Library
    testImplementation("org.mock-server:mockserver-netty:5.11.2")

    // Logging Library
    implementation 'ch.qos.logback:logback-classic:1.2.6'
    implementation 'ch.qos.logback:logback-core:1.2.6'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.codehaus.janino:janino:3.1.8' // Adds conditional directives to logback.xml

    implementation 'org.unix4j:unix4j-command:0.5'

    // Graphics

    // Icons

    //implementation platform('org.kordamp.ikonli:ikonli-bom:12.1.0')
    //implementation 'org.kordamp.ikonli:ikonli-core'
    //implementation 'org.kordamp.ikonli:ikonli-javafx'
    //implementation 'org.kordamp.ikonli:ikonli-fontawesome5-pack:12.0.0'
    //implementation 'org.kordamp.ikonli:ikonli-boxicons-pack:12.0.0'

    // My Custom Dependencies
    implementation 'io.github.jmdaemon:toolbox:0.1.2'
    implementation 'io.github.jmdaemon:crypt:0.1.0'
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.8.1')
        }
    }
} 

test {
    maxHeapSize = '1G'
    testLogging {
        events "failed"
        exceptionFormat "full"
        showStandardStreams = true
    }
}

java {
    toolchain {
        //languageVersion = JavaLanguageVersion.of(17)
        languageVersion = JavaLanguageVersion.of(18)
    }
}

javafx {
    version = "17.0.1"
    //version = "18.0.1"
    modules = [ 'javafx.base', 'javafx.graphics', 'javafx.controls' , 'javafx.fxml' ]
}

application {
    mainClass = AppEntryPoint
}

//shadowJar {
    // https://stackoverflow.com/questions/32887966/shadow-plugin-gradle-what-does-mergeservicefiles-do
    //mergeServiceFiles()
//}

checkstyle { 
    toolVersion = "10.0"
    configFile file("config/checkstyle/sun_checks.xml") 
    // Disable checkstyle checks for now
    checkstyleMain.enabled = false
    checkstyleTest.enabled = false
}

sourceSets {
    main {
        resources {
            includes = [ "logback.xml", "**/*.fxml" , "**/*.css" , "**/*.properties"]
            exclude "bankaccount"
            exclude "interface-old"
            exclude "money"
        }
        java {
            exclude "bankaccount"
            exclude "interface-old"
            exclude "money"
         }
    }
    test {
        java {
            exclude "bankaccount"
            exclude "connect"
            exclude "encryption"
            exclude "interface"
            exclude "money"
            exclude "old"
            exclude "ui"
        }
    }
}
